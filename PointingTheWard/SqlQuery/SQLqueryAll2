SELECT * FROM TAB;
SELECT * FROM MEMBER_TB;
SELECT * FROM FRIEND_TB;
SELECT * FROM GROUP_TB;
SELECT * FROM EVENT_TB;
SELECT * FROM E_PARTICIPANT_TB;
SELECT * FROM G_PARTICIPANT_TB;

SELECT * FROM MEMBER_VIEW;
SELECT * FROM MEMBER_O_VIEW;
SELECT * FROM MEMBER_P_VIEW;
SELECT * FROM FRIEND_VIEW;
SELECT * FROM GROUP_VIEW;
SELECT * FROM EVENT_VIEW;

SELECT * FROM E_PARTICIPANT_INFO_VIEW;
SELECT * FROM E_PARTICIPANT_VIEW;
SELECT * FROM G_PARTICIPANT_INFO_VIEW;
SELECT * FROM G_PARTICIPANT_VIEW;
SELECT * FROM FRIEND_INFO_VIEW;

DROP VIEW G_PARTICIPANT_VIEW;
DROP VIEW G_PARTICIPANT_INFO_VIEW;
DROP VIEW E_PARTICIPANT_INFO_VIEW;
DROP VIEW FRIEND_VIEW;
DROP VIEW FRIEND_INFO_VIEW;
DROP VIEW GROUP_VIEW;
DROP VIEW EVENT_VIEW;
DROP VIEW MEMBER_VIEW;
DROP VIEW MEMBER_N_VIEW;
DROP VIEW MEMBER_O_VIEW;
DROP SEQUENCE GROUP_SEQUENCE;
DROP SEQUENCE EVENT_SEQUENCE;
DROP TABLE G_PARTICIPANT_TB;
DROP TABLE GROUP_TB;
DROP TABLE EVENT_TB;
DROP TABLE FRIEND_TB;
DROP TABLE MEMBER_TB;
DROP TRIGGER GROUP_DELETE_TRIGGER;


CREATE SEQUENCE GROUP_SEQUENCE
INCREMENT BY 1
START WITH 0
NOMAXVALUE
MINVALUE 0
NOCYCLE;

CREATE SEQUENCE EVENT_SEQUENCE
INCREMENT BY 1
START WITH 0
NOMAXVALUE
MINVALUE 0
NOCYCLE;

CREATE TABLE MEMBER_TB(
	EMAIL VARCHAR2(255) CONSTRAINT MEMBER_TB_EMAIL_PK PRIMARY KEY,
	NAME VARCHAR2(30) CONSTRAINT MEMBER_TB_NAME_NN NOT NULL,
	PWD VARCHAR2(50) CONSTRAINT MEMBER_TB_PWD_NN NOT NULL,
	LOCATION VARCHAR2(1000) CONSTRAINT MEMBER_TB_LOCATION_NN NOT NULL,
	TRANSPORTATION VARCHAR2(255) check(transportation in ('transit', 'driving')) NOT NULL
);

CREATE TABLE GROUP_TB(
	G_CODE NUMBER CONSTRAINT GROUP_TB_G_CODE_PK PRIMARY key,
	NAME VARCHAR2(255) CONSTRAINT GROUP_TB_NAME_NN NOT NULL,
	OWNER VARCHAR2(255) CONSTRAINT GROUP_TB_OWNER_FK REFERENCES MEMBER_TB(EMAIL)
);

CREATE TABLE FRIEND_TB(
	EMAIL VARCHAR2(255) CONSTRAINT FRIEND_TB_EMAIL_FK REFERENCES MEMBER_TB(EMAIL),
	F_EMAIL VARCHAR2(255) CONSTRAINT FRIEND_TB_F_EMAIL_FK REFERENCES MEMBER_TB(EMAIL),
	PRIMARY KEY(EMAIL ,F_EMAIL)
);

CREATE TABLE EVENT_TB(
	E_CODE NUMBER CONSTRAINT EVENT_TB_E_CODE_PK PRIMARY KEY,
	EMAIL VARCHAR2(255) CONSTRAINT EVENT_TB_EMAIL_FK REFERENCES MEMBER_TB(EMAIL),
	TITLE VARCHAR2(255) CONSTRAINT EVENT_TB_TITLE_NN NOT NULL,
	S_DATE VARCHAR2(50) CONSTRAINT EVENT_TB_S_DATE_NN NOT NULL,
	E_DATE VARCHAR2(50) CONSTRAINT EVENT_TB_E_DATE_NN NOT NULL,
	S_TIME VARCHAR2(50) CONSTRAINT EVENT_TB_S_TIME_NN NOT NULL,
	E_TIME VARCHAR2(50) CONSTRAINT EVENT_TB_E_TIME_NN NOT NULL,
	CONTENT VARCHAR2(4000) CONSTRAINT EVENT_TB_CONTENT_NN NOT NULL,
	PLACE VARCHAR2(1000) CONSTRAINT EVENT_TB_PLACE_NN NOT NULL
);

CREATE TABLE G_PARTICIPANT_TB(
	G_CODE NUMBER CONSTRAINT G_PARTICIPANT_TB_G_CODE_FK REFERENCES GROUP_TB(G_CODE),
	EMAIL VARCHAR2(255) CONSTRAINT G_PARTICIPANT_TB_EMAIL_FK REFERENCES MEMBER_TB(EMAIL),
	CONSTRAINT G_PARTICIPANT_pk PRIMARY KEY(G_CODE, EMAIL )
);

CREATE VIEW MEMBER_VIEW
AS
SELECT EMAIL,PWD, NAME,LOCATION,TRANSPORTATION FROM MEMBER_TB;

CREATE VIEW MEMBER_N_VIEW
AS
SELECT EMAIL, PWD, NAME FROM MEMBER_TB;

CREATE VIEW MEMBER_O_VIEW
AS
SELECT EMAIL, NAME, LOCATION,TRANSPORTATION FROM MEMBER_TB;

CREATE VIEW FRIEND_VIEW
AS
SELECT EMAIL,F_EMAIL FROM FRIEND_TB;

CREATE VIEW FRIEND_INFO_VIEW
AS 
SELECT FT.EMAIL,FT.F_EMAIL,MT.NAME,MT.LOCATION,MT.TRANSPORTATION
FROM MEMBER_TB MT, FRIEND_TB FT
WHERE
FT.F_EMAIL = MT.EMAIL;

CREATE VIEW GROUP_VIEW
AS 
SELECT * FROM GROUP_TB;

CREATE VIEW EVENT_VIEW
AS
SELECT * FROM EVENT_TB;

CREATE VIEW G_PARTICIPANT_VIEW
AS
SELECT * FROM G_PARTICIPANT_TB;

CREATE VIEW G_PARTICIPANT_INFO_VIEW
AS
SELECT MT.EMAIL, MT.NAME, MT.LOCATION, MT.TRANSPORTATION,GT.G_CODE,GT.OWNER
FROM GROUP_TB GT, MEMBER_TB MT, G_PARTICIPANT_TB PT
WHERE 
GT.G_CODE = PT.G_CODE AND PT.EMAIL = MT.EMAIL;


CREATE VIEW E_PARTICIPANT_INFO_VIEW
AS
SELECT MT.EMAIL, MT.NAME, MT.LOCATION, MT.TRANSPORTATION,ET.E_CODE,ET.TITLE,ET.S_DATE,ET.E_DATE,ET.S_TIME,ET.E_TIME,ET.CONTENT,ET.PLACE
FROM EVENT_TB ET, MEMBER_TB MT
WHERE 
ET.EMAIL = MT.EMAIL;

insert into member_tb(email, name, pwd, location, transportation) 
values('SB', '성봉', 'pwd', 'location', 'transit');
insert into member_tb(email, name, pwd, location, transportation) 
values('DJ', '대진', 'pwd1', 'location1', 'transit');
insert into member_tb(email, name, pwd, location, transportation) 
values('JH', '장해', 'pwd2', 'location2', 'driving');

insert into FRIEND_TB(EMAIL,F_EMAIL)
VALUES('SB','DJ');
insert into FRIEND_TB(EMAIL,F_EMAIL)
VALUES('SB','JH');
insert into FRIEND_TB(EMAIL,F_EMAIL)
VALUES('DJ','SB');
insert into FRIEND_TB(EMAIL,F_EMAIL)
VALUES('DJ','JH');
insert into FRIEND_TB(EMAIL,F_EMAIL)
VALUES('JH','SB');
insert into FRIEND_TB(EMAIL,F_EMAIL)
VALUES('JH','DJ');


insert into group_tb(g_code, name, owner)
values(group_sequence.nextval, '성봉그룹1', 'SB');
insert into group_tb(g_code, name, owner)
values(group_sequence.nextval, '성봉그룹2', 'SB');
insert into group_tb(g_code, name, owner)
values(group_sequence.nextval, '대진그룹1', 'DJ');
insert into group_tb(g_code, name, owner)
values(group_sequence.nextval, '장해그룹1', 'JH');

insert into g_participant_tb(g_code, email)
values(0, 'DJ');
insert into g_participant_tb(g_code, email)
values(0, 'JH');
insert into g_participant_tb(g_code, email)
values(1, 'DJ');
insert into g_participant_tb(g_code, email)
values(2, 'SB');
insert into g_participant_tb(g_code, email)
values(2, 'JH');
insert into g_participant_tb(g_code, email)
values(3, 'SB');
insert into g_participant_tb(g_code, email)
values(3, 'DJ');

INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'SB','성봉일정1','시작날','끝날','시작시간','종료시간','내용','장소');
INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'DJ','성봉일정1','시작날','끝날','시작시간','종료시간','내용','장소');

INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'SB','성봉일정2','시작날','끝날','시작시간','종료시간','내용','장소');
INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'JH','성봉일정2','시작날','끝날','시작시간','종료시간','내용','장소');

INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'DJ','대진일정1','시작날','끝날','시작시간','종료시간','내용','장소');
INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'DJ','대진일정2','시작날','끝날','시작시간','종료시간','내용','장소');
INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'SB','대진일정2','시작날','끝날','시작시간','종료시간','내용','장소');
INSERT INTO EVENT_TB(E_CODE,TITLE,S_DATE,E_DATE,S_TIME,E_TIME,CONTENT,PLACE)
VALUES(EVENT_SEQUENCE.NEXTVAL,'JH','장해일정1','시작날','끝날','시작시간','종료시간','내용','장소');

SELECT * FROM GROUP_TB
SELECT * FROM G_PARTICIPANT_INFO_VIEW
SELECT * FROM G_PARTICIPANT_TB
SELECT * FROM E_PARTICIPANT_TB


CREATE OR REPLACE TRIGGER GROUP_DELETE_TRIGGER
BEFORE DELETE ON GROUP_TB
FOR EACH ROW
BEGIN
DELETE FROM G_PARTICIPANT_TB WHERE G_CODE = :OLD.G_CODE;
END;
select * from all_triggers
drop trigger G_PARTICIPANT_delete_trigger







